{"version":3,"sources":["components/Button/Button.js","assets/audio/RK_BT3_Chord_07_Em7.wav","App.js","reportWebVitals.js","index.js"],"names":["Button","props","className","id","onClick","clickHandle","children","App","state","breakLength","sessionLength","timerLength","timerOn","breakOn","timerId","incrementCount","bind","decrementCount","countdownHandle","startPauseHandle","changeSession","resetHandle","e","preventDefault","this","setState","prevState","target","console","log","Length","Math","floor","toLocaleString","minimumIntegerDigits","useGrouping","convertTime","clearInterval","playSound","setInterval","sounds","document","getElementById","play","src","Sound","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.69925527.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.scss';\n\n\nconst Button = (props) => (\n  <div className={props.className} id={props.id} onClick={props.clickHandle} >\n    {props.children}\n  </div>\n);\n\nButton.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  clickHandle: PropTypes.func,\n  children: PropTypes.any\n\n};\n\nexport default Button;\n","export default __webpack_public_path__ + \"static/media/RK_BT3_Chord_07_Em7.075722f8.wav\";","import './App.scss';\nimport Button from './components/Button/Button';\nimport Sound  from './assets/audio/RK_BT3_Chord_07_Em7.wav'\nimport { React, Component } from 'react';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props)\n    this.state = {\n      breakLength : 5, \n      sessionLength: 25, \n      timerLength: 1500, //total length in seconds\n      timerOn: false,\n      breakOn: false, \n      \n    }\n\n    this.timerId = null,\n    this.incrementCount = this.incrementCount.bind(this); \n    this.decrementCount = this.decrementCount.bind(this);\n    this.countdownHandle = this.countdownHandle.bind(this);\n    this.startPauseHandle = this.startPauseHandle.bind(this);\n    this.changeSession = this.changeSession.bind(this);\n    this.resetHandle = this.resetHandle.bind(this);\n    \n  }\n\n  incrementCount(e){\n    e.preventDefault();\n\n    this.setState(prevState => {\n      if(e.target.id == 'break-increment'){\n        if(prevState.sessionLength == 60){\n          console.log('cannot go any higher');\n        }else{\n          prevState.breakLength++;\n          return ({breakLength: prevState.breakLength})\n        }\n      }else{\n        if(prevState.sessionLength == 60){\n          console.log('cannot go any higher');\n        }else{\n          prevState.sessionLength++\n          return ({sessionLength: prevState.sessionLength,\n                   timerLength: prevState.sessionLength*60})\n         }\n      }    \n    } )\n  }\n\n  decrementCount(e){\n    e.preventDefault(); \n\n    this.setState(prevState => {\n      if(e.target.id == 'break-decrement'){\n        if(prevState.breakLength == 0){\n          console.log('cannot go any lower')\n        }else{\n          prevState.breakLength--;\n          return ({breakLength: prevState.breakLength})\n        }\n      }else{\n        if(prevState.sessionLength == 0){\n          console.log('cannot go any lower')\n        }else{\n          prevState.sessionLength--;\n          return ({sessionLength: prevState.sessionLength, \n                   timerLength: prevState.sessionLength*60})\n        } \n      }\n    } )\n  }\n\n  convertTime(Length){\n    const min = Math.floor(Length/60).toLocaleString('en-US', {\n      minimumIntegerDigits: 2,\n      useGrouping: false\n    }); \n    const sec = (Length % 60).toLocaleString('en-US', {\n      minimumIntegerDigits: 2,\n      useGrouping: false\n    }); \n    return min + ' : ' + sec; \n  }\n\n  countdownHandle(){\n    this.setState(prevState => {\n        prevState.timerLength--\n        console.log(this.state.timerLength)\n        this.convertTime(prevState.timerLength);\n        return ({timerLength: prevState.timerLength})\n    })\n    if(this.state.timerLength == 0){\n      clearInterval(this.timerId);\n      this.playSound();\n      this.changeSession();\n    }\n  }\n\n  changeSession(){\n    if(this.state.breakOn){\n      this.setState({\n        timerLength: this.state.sessionLength*60,\n        timerOn: false, \n        breakOn: false\n      }, ()=>{\n        \n        this.startPauseHandle()\n      }\n      )\n    }else{\n      this.setState({\n        timerLength: this.state.breakLength*60,\n        timerOn: false, \n        breakOn: true\n      }, ()=>{\n        this.startPauseHandle()\n      })\n    }\n  }\n\n  startPauseHandle(){\n    console.log(this.state.timerOn)\n    if(!this.state.timerOn){\n      this.setState({timerOn: true}, \n        ()=>{\n          if(this.state.breakOn){\n          console.log('break')\n          this.timerId = setInterval(this.countdownHandle, 1000, this.state.breakOn); \n          \n        }else{\n          console.log('session'); \n          this.timerId = setInterval(this.countdownHandle, 1000, this.state.breakOn);   \n        }}\n      )  \n    }else{\n      clearInterval(this.timerId);\n      this.setState({timerOn: false})\n      console.log(this.state.timerOn)\n      \n    }\n  }\n\n  playSound(){\n    const sounds = document.getElementById('sound');\n    console.log(sounds);\n    sounds.play();\n  }\n\n\n  resetHandle(){\n    clearInterval(this.timerId);\n    this.setState({\n        breakLength : 5, \n        sessionLength: 25, \n        timerLength: 1500, //total length in seconds\n        timerOn: false,\n      })\n  }\n\n  render(){\n\n    return (\n\n      <div className='app-main d-flex'>\n      <div id='wrapper' className='wrapper d-flex w-50 h-60 m-auto t-cent'>\n        <div className='m-auto'>\n          <div className='d-flex'>\n            <div className='minw-200'>\n              <div id='break-label' className='mb-10'>\n                Break Length\n              </div>\n                <div className='d-flex'>\n                <Button id='break-increment' \n                        className='p-10 br-5 bg-c-1 m-5' \n                        clickHandle={this.incrementCount}>inc</Button>\n                <p id='break-length'>{this.state.breakLength}</p>\n                <Button id='break-decrement' \n                        className='p-10 br-5 bg-c-2 m-5' \n                        clickHandle={this.decrementCount}>dec</Button>\n                </div>\n            </div>\n            <div className='minw-200'>\n              <div id='session-label' className='mb-10'>\n                Session Length\n              </div>\n                <div className='d-flex'>\n                <Button id='session-increment' \n                        className='p-10 br-5 bg-c-1 m-5' \n                        clickHandle={this.incrementCount}>inc</Button>\n                <p id='session-length'>{this.state.sessionLength}</p>\n                <Button id='session-decrement' \n                        className='p-10 br-5 bg-c-2 m-5' \n                        clickHandle={this.decrementCount}>dec</Button>\n                </div>\n            </div>\n          </div>\n\n          <h1 id='timer-label'>{this.state.breakOn ? 'Break' : 'Session'}</h1>\n\n          <p id='time-left'>{this.convertTime(this.state.timerLength)}</p>\n         \n          <Button id='start_stop' \n                  className='w-40 m-auto mb-10 p-10 br-5 bg-c-1' \n                  clickHandle={this.startPauseHandle}>\n                  {this.state.timerOn ? 'stop ' : 'start'}</Button>\n          <Button id='reset' \n                  className='w-40 m-auto p-10 br-5 bg-c-2' \n                  clickHandle={this.resetHandle}>reset</Button>\n      </div>\n      <audio id='sound' src={Sound}></audio>\n      </div>\n      </div>\n    \n    )\n  }\n\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}